@page "/SignUp"

@using Order.Client.Components.Form
@using Order.Client.Components.Layout
@using Order.Client.Constants

@namespace Order.Client.Pages

<div class="@disabled">
    <EditForm class="form-container" Model=SignUpData OnValidSubmit=@HandleFormSubmition>
        <ObjectGraphDataAnnotationsValidator />
        <Column CssClass="form-column" Align=@AlignItems.STRETCH ExpandVertically=@true>
            <OTitle Text=@M.SignUp Size=1.5 />

            <Group>
                <OInputText PlaceHolder=@M.LastName @bind-Value=@SignUpData.LastName />
                <ValidationMessage For=@( () => SignUpData.LastName ) />
            </Group>

            <Group>
                <OInputText PlaceHolder=@M.FirstName @bind-Value=@SignUpData.FirstName />
                <ValidationMessage For=@( () => SignUpData.FirstName ) />
            </Group>

            <Group>
                <OInputText PlaceHolder=@M.Email @bind-Value=@SignUpData.Email />
                <ValidationMessage For=@( () => SignUpData.Email ) />
            </Group>

            <Group>
                <OInputText HideData=@isPasswordHidden RightIcon=@passwordRightIcon OnRightIconClick=@TogglePasswordHide
                    PlaceHolder=@M.Password @bind-Value=@SignUpData.Password />
                <ValidationMessage For=@( () => SignUpData.Password) />
            </Group>

            <Group>
                <OInputText HideData=@isConfirmPasswordHidden RightIcon=@confirmPasswordRightIcon
                    OnRightIconClick=@ToggleConfirmPasswordHide PlaceHolder=@M.ConfirmPassword
                    @bind-Value=@SignUpData.ConfirmPassword />
                <ValidationMessage For=@( () => SignUpData.ConfirmPassword ) />
            </Group>

            <Button Type="submit" Label=@M.Register />

            <Group>
                @M.AskForAccountExistance
                <LinkButton NavigateTo="SignIn/" Label=@M.SignInRedirect />
            </Group>
        </Column>
    </EditForm>
</div>
