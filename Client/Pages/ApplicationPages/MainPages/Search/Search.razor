@page "/search"

@using Microsoft.AspNetCore.Authorization
@using Order.Shared.Security.Policies
@using Order.Client.Components.Layout
@using Order.Client.Components.Form
@using Order.Client.Constants

@namespace Order.Client.Pages
@attribute [Authorize(Policy = IsGuest.Name)]

<div class=@blured>
    <Column CssClass="search-column" Align=@AlignItems.STRETCH>

        <LayoutSetter>
            <Top>
                @* The "Model" does not really matter here because we are not submitting the form *@
                <EditForm Model=@(new object())>
                    <OInputText CssClass="address-bar" Disable=@true PlaceHolder=@M.DeliveryAddress
                        Value=@CurrentAddress?.ToString() @onclick=@HandleAddressBarClick />
                </EditForm>
            </Top>
        </LayoutSetter>

        <EditForm Model=@SearchValue>
            <OInputText CssClass="search-bar" PlaceHolder=@M.CategorySearchBar RightIcon="icons/searchbar-magnifier.png"
                @bind-Value=@SearchValue.Value OnRightIconClick=@((string search) => HandleSearch(search)) />
        </EditForm>

        <p class="text">@M.TopCategories</p>

        <Row CssClass="categories" Wrap=@FlexWrap.WRAP Justify=@JustifyContent.SPACE_BETWEEN>
            @foreach (var category in Categories ?? new())
            {
                <CategoryCard @key=@category Label=@category.Label Picture=@category.Picture @onclick=@(() =>
                HandleSearch(category.Label)) />
            }
        </Row>
    </Column>
</div>

<AddressModal @ref=@AddressModal OnClose=@OnAddressModalClosed />
