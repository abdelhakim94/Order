@page "/search/{Search}"

@using Order.Client.Components
@using Order.Client.Constants
@using Order.Client.Layouts
@using Order.Shared.Security.Policies
@using Microsoft.AspNetCore.Authorization

@namespace Order.Client.Pages
@attribute [Authorize(Policy = IsGuest.Name)]

<div>
    <LayoutSetter>
        <Top>
            <DishOrChefToggle LeftLabel=@M.Meals RightLabel=@M.Chefs Value=@searchByChefs
                ValueChanged=@HandleDishOrChefToggle />
        </Top>
    </LayoutSetter>
    <Column CssClass="main" Justify=@JustifyContent.FLEX_START Align=@AlignItems.STRETCH ExpandHorizontally=@true>
        <EditForm Model=@SearchValue>
            <OInputText CssClass="search-bar" PlaceHolder=@(searchByChefs ? M.ChefSearchBar : M.DishOrMenuSearchBar)
                RightIcon="icons/searchbar-magnifier.png" @bind-Value=@SearchValue.Value
                OnRightIconClick=@HandleSearch />
        </EditForm>
        <Spinner @ref=@spinner>
            @if (searchByChefs)
            {
                <p class="text">@M.ChefsFound(chefs?.TotalItems)</p>
                foreach (var item in chefs?.Items ?? new())
                {
                    <ChefListItem @key=@item Chef=@item @onclick=@(() => NavigateToChefDetails(item)) />
                }
            }
            else
            {
                <p class="text">@M.DishesAndMenuesFound(dishAndMenues?.TotalItems)</p>
                foreach (var item in dishAndMenues?.Items ?? new())
                {
                    <DishOrMenuListItem @key=@item DishOrMenu=@item @onclick=@(() => NavigateToDishOrMenuDetails(item)) />
                }
            }
        </Spinner>
    </Column>
</div>
