@using Order.Shared.Security.Claims

@* Read more about authentication/authorozation in blazor here: *@
@* https://docs.microsoft.com/en-us/aspnet/core/blazor/security/?view=aspnetcore-5.0#authorization *@
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <Toast @ref=@Toast />
            <CascadingValue Value=@Toast IsFixed=@true>
                <AuthorizeRouteView RouteData="@routeData">
                    <NotAuthorized>
                        @if (!(context.User.Identity.IsAuthenticated && !context.User.Claims.Any(c => c.Type ==
                        nameof(Profile) && c.Value == nameof(Profile.GUEST))))
                            {
                        <Redirect Route="SignIn/" />
                        }
                            else
                            {
                        <Redirect Route="Unauthorized/" />
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
            </CascadingValue>
        </Found>
        <NotFound>
            <LayoutView>
                <Redirect Route="NotFound/" />
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
